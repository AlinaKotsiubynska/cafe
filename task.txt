==24.04===============================================


======================================================
Done✅
1. Написать функцию, которая из списка официантов(массив объектов) выбрает официантов, которые  есть на смене по свойству isPresent: true; и записывает их всех в массив, который хранится в переменной presentWorkers = []. 
 
Пример: concole.log(presentWorkers); // [{name: "Ann", isPresent: true, tables: [], tips: 0}, {name: "Bob", isPresent: true, tables: [], tips: 0}] 

----- 
Done✅
2. Написать ф-цию, которая принимает два параметра (список столиков, список официантов на смене) и: 
 - распределяет все столики в кафе - tables, между всеми официантами, которые есть на смене
 - перезаписывает в свойство каждому столику имя оффицианта, который его обслуживает, 
 - оффицианту, в свою очередь, в свойство tabeles перезаписывает все номера столиков, которые он обслуживает на этой смене 
Функция ничего не возвращает, а перезаписывает объекты в массивах.

Пример: console.log(presentWorkers); // [{name: "Ann", isPresent: true, tables: [1, 3, 6, 7], tips: 0}, {name: "Bob", isPresent: true, tables: [2, 4, 5, 8], tips: 0}] 
console.log(tables); // [{tabel: 1, service: "Ann"}, {tabel: 2, service: "Bob"}, {tabel: 3, service: "Ann"}, ... ]

-----
Done✅
3. Написать функцию addOrder(table, dishId, num), которая принимает номер столика, id блюда(меню с блюдами внешняя переменная из глобальной области видимости) и кол-во данных блюд в заказе. Добавляет в объекте столика, свойство currentOrder - объект со свойствами, где ключ - id блюда, значение ключа - кол-во этих блюд в текущем заказе, 

Пример currentOrder: {capuchino: 2, napoleon: 2, zavarnoe: 1}, 
Done✅
- Написать функцию  removeDish(currentTable, dishId, num) и removeOrder(currentTable)

 
-----
Done✅
4. Написать функцию setOrder(tableNum) для обработки заказа на кухне и на баре, которая принимает объект tabel(номер столика) и если в нём есть заполненное свойствами значение currentOrder, создает массив вида - 

пример: ["Капучино - 2", "Торт Наполеон - 2", "Пирожное заварное - 1"] 

и добавляет этот массив в свойстово prepearing в объекте соотвоетствующего столика. 

-----

5. Написать функцию которая принимает столик, название блюда и кол-во, перезаписывает свойство prepearing, удаляя из него блюда и кол-во, которые были приготовлены. 

-----

6. Написать функцию, которая проверяет приготовлены ли все блюда и когда это условие выполняется она:
1) в объект столика добавляет свойства:  
- currentCheck в которое записывает стоимость всего заказа + 15% чаевых,0
- totalCheck, в которое записывает стоимость текущего заказа или добавляет эту стоимость к сумме предыдущих заказов на этом столике. 
2) добавляет в свойство tips объекта оффоицианта, который обслуживает этот столик, 15% от стоимости заказа. 
3) возвращает строку типа: 
"Капучино - 2*45 - 90грн 
Торт Наполеон - 2*75 - 150грн 
Пирожное заварное - 1*38 - 38грн 
СТОИМОСТЬ ЗАКАЗА: 278грн 
ЧАЕВЫЕ: 42грн 
ИТОГО: 320грн" 

-----

7. Написать функцию которая проверяет изменился ли totalCheck столика и если это произошло то в объекте столика:
- удаляются все свойства кроме {table: 1, service: "", totalCheck: ""} 
- добавляэтся свойство isFree: true

-----

8.  реализовать модалку для кухни, которая оторая отображает список созданных заказов на всех столиках с перечнями блюд и количества.
при нажатии на кнопку "Готово" напротив блюда текущаяпозиция должна быть перечеркнута. Когда все позиции станут перечеркнуты
в объекте столика свойство statusOrder = true и текущий список блюд должен удалиться из модалки

9. после появления statusOrder = true в модалке со списком заказов нужно отрендерить айтем с информацией о номере стола 
и статусом Готово и кнопкой Ок, которая будет удалять текущий заказ из списка

10. в компоненте столика реализовать 2 кнопки котрые будут открывать модалку для заказа(реализовано) и модалку для его оплаты.
модалка оплаты отображает стоимость всего заказа и два поля для ввода оплаченного чека и возможных чаевых, которые суммируются
официанту в свойство tips, а также кнопки submit для отправки формы

11. после сабмита формы с оплаченным заказом на объекте столика свойство order удаляется.

12. все компоненты столиков должны иметь зелёный цвет при отсутствии свойства orders и красный при его наличии
